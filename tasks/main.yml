# vim: set filetype=yaml.ansible:
---
- name: Debug configs for each service
  ansible.builtin.debug:
    msg:
      - "service_details.key: {{ item.key }}"
      - "service_details.value: {{ item.value }}"
  loop: "{{ services | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
    loop_var: service_details
  when: services is defined

- name: Install services
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  become: true
  loop: "{{ services.values() | map(attribute='package') | flatten | select('defined') | list }}"
  when:
    - services is defined
    - item | length > 0
  loop_control:
    label: "{{ item }}"

- name: Set fact for current service
  ansible.builtin.set_fact:
    current_service_details: "{{ item }}"
  loop: "{{ services | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
    loop_var: service_details
  when: services is defined

- name: Deploy service config templates
  ansible.builtin.template:
    src: "{{ item.value.src }}"
    dest: "{{ item.value.dest }}"
    mode: "{{ item.value.mode }}"
    owner: "{{ item.value.owner | default('root') }}"
    group: "{{ item.value.group | default('root') }}"
  register: config_status
  become: true
  loop: "{{ services.values() | map(attribute='configs') | list | sum(start=[]) }}"
  loop_control:
    label: "{{ item.key }}"
  when:
    - services is defined
    - item.value.enabled | default(false) | bool

- name: Trigger service restart
  ansible.builtin.meta: flush_handlers
  when:
    - services is defined
    - config_status.changed
