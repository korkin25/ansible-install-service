---
- name: Debug configs for each service
  ansible.builtin.debug:
    msg:
      - "service_details.key: {{ service_details.key }}"
      - "service_details.value: {{ service_details.value }}"
  loop: "{{ services | dict2items }}"
  loop_control:
    label: "{{ service_details.key }}"
    loop_var: service_details
  when: services is defined

- name: Install services
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  become: true
  loop: "{{ services | dict2items | map(attribute='value.packages') | select('defined') | flatten | list }}"
  when: services is defined
  loop_control:
    label: "{{ item }}"

- name: Deploy service config templates
  ansible.builtin.template:
    src: "{{ config.src }}"
    dest: "{{ config.dest }}"
    mode: "{{ config.mode }}"
    owner: "{{ config.owner | default('root') }}"
    group: "{{ config.group | default('root') }}"
    variables: "{{ config.template_vars | default({}) }}"
  register: config_status
  become: true
  loop: "{{ services | dict2items | map(attribute='value.configs') | select('defined') | flatten | list }}"
  loop_control:
    label: "{{ config.src }}"
  when:
    - services is defined
    - config.enabled | default(false) | bool
  vars:
    config: "{{ item }}"
  notify: restart services

- name: Trigger service restart
  ansible.builtin.meta: flush_handlers
  when: 
    - services is defined
    - config_status.results | selectattr('changed', 'equalto', true) | list | length > 0
